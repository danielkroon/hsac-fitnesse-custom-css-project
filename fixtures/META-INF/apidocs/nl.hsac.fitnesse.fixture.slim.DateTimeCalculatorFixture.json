{
  "constructors": [
    {
      "readableName": "date time calculator fixture",
      "usage": "| date time calculator fixture | [dateFormat] |",
      "name": "DateTimeCalculatorFixture",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "dateFormat",
          "type": "String"
        }
      ],
      "exceptions": []
    }
  ],
  "qualifiedName": "nl.hsac.fitnesse.fixture.slim.DateTimeCalculatorFixture",
  "publicMethods": [
    {
      "readableName": "set date format",
      "usage": "| set date format | [df] | ",
      "contexthelp": "set date format \u0026lt;df\u0026gt;",
      "name": "setDateFormat",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "df",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "add years to",
      "usage": "| add years | [years] | to | [formattedDate] | ",
      "contexthelp": "add years \u0026lt;years\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addYearsTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "years",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "add months to",
      "usage": "| add months | [months] | to | [formattedDate] | ",
      "contexthelp": "add months \u0026lt;months\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addMonthsTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "months",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "add days to",
      "usage": "| add days | [days] | to | [formattedDate] | ",
      "contexthelp": "add days \u0026lt;days\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addDaysTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "days",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "add hours to",
      "usage": "| add hours | [hours] | to | [formattedDate] | ",
      "contexthelp": "add hours \u0026lt;hours\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addHoursTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "hours",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "add minutes to",
      "usage": "| add minutes | [minutes] | to | [formattedDate] | ",
      "contexthelp": "add minutes \u0026lt;minutes\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addMinutesTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "minutes",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "add seconds to",
      "usage": "| add seconds | [seconds] | to | [formattedDate] | ",
      "contexthelp": "add seconds \u0026lt;seconds\u0026gt; to \u0026lt;formattedDate\u0026gt;",
      "name": "addSecondsTo",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "seconds",
          "type": "int"
        },
        {
          "name": "formattedDate",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "set global value to",
      "usage": "| set global value | [symbolName] | to | [value] | ",
      "contexthelp": "set global value \u0026lt;symbolName\u0026gt; to \u0026lt;value\u0026gt;",
      "name": "setGlobalValueTo",
      "docString": "Stores a (global) value so it can be accessed by other fixtures/pages.",
      "annotations": [],
      "parameters": [
        {
          "name": "symbolName",
          "description": "name to store value under.",
          "type": "String"
        },
        {
          "name": "value",
          "description": "value to store.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "global value",
      "usage": "| global value | [symbolName] | ",
      "contexthelp": "global value \u0026lt;symbolName\u0026gt;",
      "name": "globalValue",
      "docString": "Retrieves a (global) value, which was previously stored using #setGlobalValueTo().",
      "annotations": [],
      "parameters": [
        {
          "name": "symbolName",
          "description": "name value was stored under.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "wait seconds",
      "usage": "| wait seconds | [i] | ",
      "contexthelp": "wait seconds \u0026lt;i\u0026gt;",
      "name": "waitSeconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "i",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "boolean"
    },
    {
      "readableName": "wait milliseconds",
      "usage": "| wait milliseconds | [i] | ",
      "contexthelp": "wait milliseconds \u0026lt;i\u0026gt;",
      "name": "waitMilliseconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "i",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "boolean"
    },
    {
      "readableName": "set repeat interval to milliseconds",
      "usage": "| set repeat interval to milliseconds | [milliseconds] | ",
      "contexthelp": "set repeat interval to milliseconds \u0026lt;milliseconds\u0026gt;",
      "name": "setRepeatIntervalToMilliseconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "milliseconds",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "repeat interval",
      "usage": "| repeat interval |",
      "contexthelp": "repeat interval",
      "name": "repeatInterval",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "long"
    },
    {
      "readableName": "repeat at most times",
      "usage": "| repeat at most times | [maxCount] | ",
      "contexthelp": "repeat at most times \u0026lt;maxCount\u0026gt;",
      "name": "repeatAtMostTimes",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "maxCount",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "repeat at most times",
      "usage": "| repeat at most times |",
      "contexthelp": "repeat at most times",
      "name": "repeatAtMostTimes",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "int"
    },
    {
      "readableName": "repeat count",
      "usage": "| repeat count |",
      "contexthelp": "repeat count",
      "name": "repeatCount",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "int"
    },
    {
      "readableName": "time spent repeating",
      "usage": "| time spent repeating |",
      "contexthelp": "time spent repeating",
      "name": "timeSpentRepeating",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "long"
    }
  ],
  "typeName": "DateTimeCalculatorFixture",
  "name": "DateTimeCalculatorFixture",
  "annotations": []
}