{
  "constructors": [
    {
      "readableName": "base 64 fixture",
      "usage": "| base 64 fixture |",
      "name": "Base64Fixture",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": []
    }
  ],
  "qualifiedName": "nl.hsac.fitnesse.fixture.slim.Base64Fixture",
  "publicMethods": [
    {
      "readableName": "encode",
      "usage": "| encode | [fileUrl] | ",
      "contexthelp": "encode \u0026lt;fileUrl\u0026gt;",
      "name": "encode",
      "docString": "Gets the content of specified file base64 encoded.",
      "annotations": [],
      "returnDescription": "base64 encoded file content.",
      "parameters": [
        {
          "name": "fileUrl",
          "description": "either absolute path, or link to file inside wiki\u0027s files section.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "create from",
      "usage": "| create | [fileName] | from | [base64String] | ",
      "contexthelp": "create \u0026lt;fileName\u0026gt; from \u0026lt;base64String\u0026gt;",
      "name": "createFrom",
      "docString": "Creates a new file with content read from base64 encoded string.",
      "annotations": [],
      "returnDescription": "location of created file.",
      "parameters": [
        {
          "name": "fileName",
          "description": "(base) file name to create (if a file with specified name already exists\n                 a number will be added to make the name unique).",
          "type": "String"
        },
        {
          "name": "base64String",
          "description": "base64 encoded string to decode and use as file content.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "get save base",
      "usage": "| get save base |",
      "contexthelp": "get save base",
      "name": "getSaveBase",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "set save base",
      "usage": "| set save base | [saveBase] | ",
      "contexthelp": "set save base \u0026lt;saveBase\u0026gt;",
      "name": "setSaveBase",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "saveBase",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "set global value to",
      "usage": "| set global value | [symbolName] | to | [value] | ",
      "contexthelp": "set global value \u0026lt;symbolName\u0026gt; to \u0026lt;value\u0026gt;",
      "name": "setGlobalValueTo",
      "docString": "Stores a (global) value so it can be accessed by other fixtures/pages.",
      "annotations": [],
      "parameters": [
        {
          "name": "symbolName",
          "description": "name to store value under.",
          "type": "String"
        },
        {
          "name": "value",
          "description": "value to store.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "global value",
      "usage": "| global value | [symbolName] | ",
      "contexthelp": "global value \u0026lt;symbolName\u0026gt;",
      "name": "globalValue",
      "docString": "Retrieves a (global) value, which was previously stored using #setGlobalValueTo().",
      "annotations": [],
      "parameters": [
        {
          "name": "symbolName",
          "description": "name value was stored under.",
          "type": "String"
        }
      ],
      "exceptions": [],
      "returnType": "String"
    },
    {
      "readableName": "wait seconds",
      "usage": "| wait seconds | [i] | ",
      "contexthelp": "wait seconds \u0026lt;i\u0026gt;",
      "name": "waitSeconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "i",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "boolean"
    },
    {
      "readableName": "wait milliseconds",
      "usage": "| wait milliseconds | [i] | ",
      "contexthelp": "wait milliseconds \u0026lt;i\u0026gt;",
      "name": "waitMilliseconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "i",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "boolean"
    },
    {
      "readableName": "set repeat interval to milliseconds",
      "usage": "| set repeat interval to milliseconds | [milliseconds] | ",
      "contexthelp": "set repeat interval to milliseconds \u0026lt;milliseconds\u0026gt;",
      "name": "setRepeatIntervalToMilliseconds",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "milliseconds",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "repeat interval",
      "usage": "| repeat interval |",
      "contexthelp": "repeat interval",
      "name": "repeatInterval",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "long"
    },
    {
      "readableName": "repeat at most times",
      "usage": "| repeat at most times | [maxCount] | ",
      "contexthelp": "repeat at most times \u0026lt;maxCount\u0026gt;",
      "name": "repeatAtMostTimes",
      "docString": "",
      "annotations": [],
      "parameters": [
        {
          "name": "maxCount",
          "type": "int"
        }
      ],
      "exceptions": [],
      "returnType": "void"
    },
    {
      "readableName": "repeat at most times",
      "usage": "| repeat at most times |",
      "contexthelp": "repeat at most times",
      "name": "repeatAtMostTimes",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "int"
    },
    {
      "readableName": "repeat count",
      "usage": "| repeat count |",
      "contexthelp": "repeat count",
      "name": "repeatCount",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "int"
    },
    {
      "readableName": "time spent repeating",
      "usage": "| time spent repeating |",
      "contexthelp": "time spent repeating",
      "name": "timeSpentRepeating",
      "docString": "",
      "annotations": [],
      "parameters": [],
      "exceptions": [],
      "returnType": "long"
    }
  ],
  "typeName": "Base64Fixture",
  "name": "Base64Fixture",
  "annotations": []
}